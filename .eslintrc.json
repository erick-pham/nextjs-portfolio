{
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"next"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaFeatures": {
			"jsx": true
		},
		"ecmaVersion": 12,
		"sourceType": "module",
		"project": [
			"./tsconfig.json"
		]
	},
	"plugins": [
		"@typescript-eslint"
	],
	"rules": {
		"@typescript-eslint/array-type": [
			"error",
			{
				"default": "array",
				"readonly": "array"
			}
		],
		"@typescript-eslint/adjacent-overload-signatures": "error",
		"@typescript-eslint/await-thenable": "error",
		"@typescript-eslint/ban-types": [
			"error",
			{
				"types": {
					// un-ban a type that's banned by default
					"{}": false
				},
				"extendDefaults": true
			}
		],
		"@typescript-eslint/consistent-type-assertions": [
			"error",
			{
				"assertionStyle": "as",
				"objectLiteralTypeAssertions": "never"
			}
		],
		"@typescript-eslint/consistent-type-exports": "error",
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{
				"prefer": "type-imports",
				"disallowTypeAnnotations": true,
				"fixStyle": "separate-type-imports"
			}
		],
		"@typescript-eslint/explicit-function-return-type": [
			"error"
		],
		"@typescript-eslint/explicit-module-boundary-types": [
			"error"
		],
		"@typescript-eslint/member-ordering": [
			"error",
			{
				"default": {
					"memberTypes": "never",
					"optionalityOrder": "required-first",
					"order": "alphabetically"
				}
			}
		],
		"@typescript-eslint/no-confusing-void-expression": "error",
		"@typescript-eslint/no-duplicate-enum-values": "error",
		"@typescript-eslint/no-duplicate-type-constituents": "error",
		"@typescript-eslint/no-empty-interface": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		// "@typescript-eslint/no-floating-promises": "error",
		"@typescript-eslint/no-for-in-array": "error",
		"@typescript-eslint/no-import-type-side-effects": "error",
		// "@typescript-eslint/no-invalid-void-type": "error",
		// "@typescript-eslint/no-misused-promises": [
		// 	"error",
		// 	{
		// 		"checksConditionals": true,
		// 		"checksSpreads": true
		// 	}
		// ],
		"@typescript-eslint/no-mixed-enums": "error",
		"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
		"@typescript-eslint/no-redundant-type-constituents": "error",
		"@typescript-eslint/no-require-imports": "warn",
		"@typescript-eslint/no-unnecessary-condition": "error",
		"@typescript-eslint/no-unnecessary-qualifier": "error",
		"@typescript-eslint/no-unnecessary-type-constraint": "error",
		"@typescript-eslint/no-unsafe-argument": "error",
		"@typescript-eslint/no-unsafe-assignment": "error",
		"@typescript-eslint/no-unsafe-call": "error",
		"@typescript-eslint/no-unsafe-declaration-merging": "error",
		"@typescript-eslint/no-unsafe-enum-comparison": "error",
		"@typescript-eslint/no-unsafe-member-access": "error",
		"@typescript-eslint/no-unsafe-return": "error",
		"@typescript-eslint/no-unused-vars": [
			"error"
		],
		"@typescript-eslint/no-useless-empty-export": "error",
		"@typescript-eslint/no-var-requires": "error",
		"@typescript-eslint/prefer-enum-initializers": "error",
		"@typescript-eslint/prefer-for-of": "error",
		// "@typescript-eslint/prefer-readonly-parameter-types": "error",
		"@typescript-eslint/prefer-reduce-type-parameter": "error",
		"@typescript-eslint/prefer-string-starts-ends-with": "error",
		"@typescript-eslint/promise-function-async": "error",
		"@typescript-eslint/restrict-plus-operands": "error",
		"@typescript-eslint/sort-type-constituents": "error",
		"@typescript-eslint/switch-exhaustiveness-check": "error",
		"@typescript-eslint/unified-signatures": "error",
		"@typescript-eslint/default-param-last": "error",
		"no-array-constructor": "off",
		"@typescript-eslint/no-array-constructor": "error",
		"no-empty-function": "off",
		"@typescript-eslint/no-empty-function": [
			"error",
			{
				"allow": [
					"private-constructors",
					"protected-constructors",
					"overrideMethods"
				]
			}
		],
		"no-extra-semi": "off",
		"@typescript-eslint/no-extra-semi": "error",
		"no-implied-eval": "off",
		"@typescript-eslint/no-implied-eval": "error",
		"no-redeclare": "off",
		"@typescript-eslint/no-redeclare": "error",
		"no-throw-literal": "off",
		"@typescript-eslint/no-throw-literal": "error",
		"no-unused-expressions": "off",
		"@typescript-eslint/no-unused-expressions": "error",
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": "error",
		"@typescript-eslint/typedef": [
			"error",
			{
				"arrowParameter": true,
				"variableDeclaration": false,
				"variableDeclarationIgnoreFunction": true
			}
		]
		//"no-console": "error"
	},
	"ignorePatterns": [
		"*.js"
	]
}